// Generated by CoffeeScript 1.6.3
(function() {
  var fix_headline, l,
    __slice = [].slice;

  google.load('visualization', '1', {
    'packages': ['motionchart']
  });

  l = function() {
    var hours, message, mins, now, objs, secs;
    message = arguments[0], objs = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    now = new Date();
    hours = now.getHours();
    mins = now.getMinutes();
    secs = now.getSeconds();
    console.log(["" + hours + ":" + mins + "." + secs, message].concat(__slice.call(objs)));
  };

  window.drawChart = function() {
    var data, dept_name, hash;
    data = new google.visualization.DataTable();
    data.addColumn('string', 'Major');
    data.addColumn('date', 'Date');
    data.addColumn('number', 'Instructor Quality');
    data.addColumn('number', 'Difficulty');
    data.addColumn('number', 'Course Quality');
    data.addColumn('number', 'Ability to Stimulate Interest');
    data.addColumn('number', 'Access to Instructor');
    data.addColumn('number', 'Amount Learned');
    data.addColumn('number', 'Amount of Work');
    data.addColumn('number', 'Instructor\'s Communication');
    data.addColumn('number', 'Recommended for Majors');
    data.addColumn('number', 'Recommended for Non-Majors');
    data.addColumn('number', 'Number of Reviews');
    hash = window.location.hash.toUpperCase();
    dept_name = hash.length > 1 ? hash.substr(1) : '';
    return $.get("https://coursegrapher.firebaseio.com/" + dept_name + ".json", function(json) {
      var a, chart_div, k, options, row_from_firebase, v;
      l('got data', json);
      row_from_firebase = function(id, dept) {
        var get, name;
        if (dept.averages == null) {
          return null;
        }
        get = function(field) {
          var n;
          n = dept.averages[field] || 0;
          return parseFloat(n.toFixed(2));
        };
        name = dept.name != null ? "" + dept.name + " (" + id + ")" : "" + dept_name + " " + id;
        return [name, new Date(2014, 0, 1), get('rInstructorQuality'), get('rDifficulty'), get('rCourseQuality'), get('rStimulateInterest'), get('rInstructorAccess'), get('rAmountLearned'), get('rWorkRequired'), get('rCommAbility'), get('rRecommendMajor'), get('rRecommendNonMajor'), dept.num || 1];
      };
      a = (function() {
        var _results;
        _results = [];
        for (k in json) {
          v = json[k];
          _results.push(row_from_firebase(k, v));
        }
        return _results;
      })();
      data.addRows(_.filter(a, _.isArray));
      chart_div = document.getElementById('chart_div');
      window.chart = new google.visualization.MotionChart(chart_div);
      options = {
        showYScalePicker: false,
        showXScalePicker: false,
        width: 950,
        height: 450,
        state: {
          "showTrails": true,
          "playDuration": 15000,
          "iconType": "BUBBLE",
          "xLambda": 1,
          "yZoomedDataMin": null,
          "xZoomedDataMin": null,
          "yLambda": 1,
          "yZoomedIn": false,
          "nonSelectedAlpha": 0.4,
          "orderedByY": false,
          "uniColorForNonSelected": false,
          "xZoomedIn": false,
          "time": "notime",
          "yAxisOption": "3",
          "xZoomedDataMax": 4,
          "dimensions": {
            "iconDimensions": ["dim0"]
          },
          "sizeOption": dept_name ? "_UNISIZE" : 12,
          "duration": {
            "multiplier": 1,
            "timeUnit": "D"
          },
          "yZoomedDataMax": null,
          "xAxisOption": "2",
          "iconKeySettings": [],
          "orderedByX": false,
          "colorOption": "4"
        }
      };
      chart.draw(data, options);
      if (!window.location.hash) {
        google.visualization.events.addListener(chart, 'statechange', function(e) {
          var dept, longtitle, m, pat, state;
          if (chart.getState() === null) {
            return;
          }
          state = JSON.parse(chart.getState());
          longtitle = state.iconKeySettings[0].key.dim0;
          pat = /[(]([\w]{1,5})[)]$/;
          m = longtitle.match(pat);
          dept = m[1];
          return window.location = "#" + dept;
        });
      }
      return l('drew chart');
    });
  };

  fix_headline = function() {
    var $extra, dept_name, hash;
    hash = window.location.hash;
    if (hash.length > 1) {
      dept_name = hash.substr(1);
      $('#graph-title').text("Courses in " + dept_name);
      $extra = $('#extra-info');
      $extra.text('Click and drag over an area to zoom in (hit enter after clicking zoom)');
      return $extra.after('<span id="back" style="float:right;padding-top:20px" class="little"><a href="#">back to depts</a></span>');
    } else {
      $('#graph-title').text('Departments at Penn');
      $('#extra-info').text('Clicking on a bubble will take you to the course page for that department');
      return $('#back').remove();
    }
  };

  fix_headline();

  window.onhashchange = function() {
    fix_headline();
    return drawChart();
  };

  google.setOnLoadCallback(drawChart);

}).call(this);
