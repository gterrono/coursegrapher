// Generated by CoffeeScript 1.4.0
(function() {

  window.database = {};

  window.departments_received = 0;

  window.revs = function(data, options) {
    var c, category, course, courses, dept, dept_name, name, obj, val, _i, _j, _len, _len1, _ref, _ref1, _results;
    departments_received++;
    dept_name = options.dept;
    dept = database[dept_name];
    _ref = data.values;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      obj = _ref[_i];
      courses = (function() {
        var _j, _len1, _ref1, _results;
        _ref1 = obj.section.aliases;
        _results = [];
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          c = _ref1[_j];
          if (c.indexOf(dept_name) === 0) {
            _results.push(c.split('-')[1]);
          }
        }
        return _results;
      })();
      for (_j = 0, _len1 = courses.length; _j < _len1; _j++) {
        course = courses[_j];
        if (!dept[course]) {
          dept[course] = {
            reviews: [],
            totals: {},
            averages: {}
          };
        }
        c = dept[course];
        c.reviews.push(obj.ratings);
        _ref1 = obj.ratings;
        for (category in _ref1) {
          val = _ref1[category];
          if (!(category in c.totals)) {
            c.totals[category] = {
              sum: 0,
              num: 0
            };
          }
          c.totals[category].sum += parseFloat(val);
          c.totals[category].num++;
        }
      }
    }
    _results = [];
    for (name in dept) {
      c = dept[name];
      _results.push((function() {
        var _ref2, _results1;
        _ref2 = c.totals;
        _results1 = [];
        for (category in _ref2) {
          val = _ref2[category];
          _results1.push(c.averages[category] = val.sum / val.num);
        }
        return _results1;
      })());
    }
    return _results;
  };

  window.ch = function(data, options) {
    var c, dept;
    dept = options.dept;
    options.courses = (function() {
      var _i, _len, _ref, _results;
      _ref = data.aliases;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        c = _ref[_i];
        if (c.indexOf(dept) === 0) {
          _results.push(c.substr(c.length - 3));
        }
      }
      return _results;
    })();
    return reviews(data.id, revs, options);
  };

  window.dept = function(data, options) {
    options.dept = data.id;
    if (!(data.id in database)) {
      database[data.id] = {};
      return dept_reviews(data.id, revs, options);
    }
  };

  window.departments_fetched = 0;

  window.depts = function(data, options) {
    var d, _i, _len, _ref, _results;
    if (options == null) {
      options = {};
    }
    _ref = data.values;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      d = _ref[_i];
      if (!(d.id in database)) {
        departments_fetched++;
        options.dept = d.id;
        database[d.id] = {};
        _results.push(dept_reviews(d.id, revs, options));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

}).call(this);
